/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment3;

import com.sun.org.apache.bcel.internal.generic.AALOAD;
import java.awt.BorderLayout;
import java.sql.DriverManager;
import javafx.scene.control.ComboBox;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableColumn;
import javax.swing.JTable;
import javax.swing.JDialog;
import java.awt.Container;
import java.awt.FlowLayout;
import javax.swing.JFrame;

import java.util.Vector;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Enumeration;
import java.util.Iterator;
import javafx.scene.layout.Border;
import javax.swing.ListModel;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.plaf.basic.BasicTreeUI;

/**
 *
 * @author mayur
 */
public class HW3 extends javax.swing.JFrame {

    /**
     * Creates new form businessSearch
     */
    public HW3() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPasswordField1 = new javax.swing.JPasswordField();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        listbusinesscategories = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listbusinesssubcategories = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        dayfrom = new javax.swing.JComboBox<>();
        dayto = new javax.swing.JComboBox<>();
        listnumcheck = new javax.swing.JComboBox<>();
        numcheckins = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        hoursfrom = new javax.swing.JTextField();
        hoursto = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        datereviewfrom = new org.jdesktop.swingx.JXDatePicker();
        datereviewto = new org.jdesktop.swingx.JXDatePicker();
        jLabel20 = new javax.swing.JLabel();
        reviewStar = new javax.swing.JTextField();
        reviewssstar = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        comboreviewvote = new javax.swing.JComboBox<>();
        reviewvote = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        outputQuery = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        creviewcount = new javax.swing.JComboBox<>();
        selectcondition = new javax.swing.JComboBox<>();
        numberoffriends = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtreviewcount = new javax.swing.JTextField();
        txtnumberoffriends = new javax.swing.JTextField();
        txtaveragestars = new javax.swing.JTextField();
        averagestars = new javax.swing.JComboBox<>();
        membersince = new org.jdesktop.swingx.JXDatePicker();
        jLabel16 = new javax.swing.JLabel();
        jComboBox10 = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jPasswordField1.setText("jPasswordField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        listbusinesscategories.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Active Life", "Arts & Entertainment", "Automotive", "Car Rental", "Cafes", "Beauty & Spas", "Convenience Stores", "Dentists", "Doctors", "Drugstores", "Department Stores", "Education", "Event Planning & Services", "Flower & Gifts", "Food", "Health & Medical", "Home Services", "Home & Gardens", "Hospitals", "Hotels & Travel", "Hardware Stores", "Grocery", "Medical Centers", "Nurseries & Gardening", "Nightlife", "Shopping", "Restaurants", "Transportation", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listbusinesscategories.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listbusinesscategoriesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listbusinesscategories);
        listbusinesscategories.getAccessibleContext().setAccessibleName("listbusinesscategories");

        listbusinesssubcategories.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(listbusinesssubcategories);
        listbusinesssubcategories.getAccessibleContext().setAccessibleName("listbusinesssubcategories");

        dayfrom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" }));
        dayfrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayfromActionPerformed(evt);
            }
        });

        dayto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" }));
        dayto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                daytoActionPerformed(evt);
            }
        });

        listnumcheck.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ">", "<", "=" }));

        numcheckins.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numcheckinsActionPerformed(evt);
            }
        });

        jLabel1.setText("Value");
        jLabel1.setName(""); // NOI18N

        jLabel2.setText("Number of Checkins");

        jLabel3.setText("To");

        jLabel4.setText("From");

        jLabel17.setText("Hours");

        jLabel18.setText("From");

        jLabel19.setText("To");

        jLabel20.setText("Star");

        reviewStar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reviewStarActionPerformed(evt);
            }
        });

        reviewssstar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ">", "<", "=" }));

        jLabel22.setText("Votes");

        comboreviewvote.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ">", "<", "=" }));

        jLabel24.setText("Checkin");

        jLabel25.setText("Review");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(dayfrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel24)
                                                    .addGap(15, 15, 15)))
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel17)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(hoursfrom, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(jLabel18))))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(dayto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(hoursto, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel19)))
                                    .addComponent(jLabel1))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(datereviewto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(datereviewfrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(35, 35, 35)
                                        .addComponent(jLabel25))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(167, 167, 167)
                                .addComponent(jLabel20)
                                .addGap(18, 18, 18)
                                .addComponent(reviewssstar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reviewStar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(numcheckins, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(listnumcheck, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addGap(18, 18, 18)
                                .addComponent(comboreviewvote, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(reviewvote, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 100, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dayfrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(hoursfrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(datereviewfrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dayto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(hoursto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(datereviewto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listnumcheck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel20)
                    .addComponent(reviewssstar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reviewStar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numcheckins, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboreviewvote, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(reviewvote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jLabel21))
        );

        listnumcheck.getAccessibleContext().setAccessibleName("cnumberofcheckins");
        numcheckins.getAccessibleContext().setAccessibleName("txtcheckin");
        hoursfrom.getAccessibleContext().setAccessibleName("txtcheckinfromHours");
        hoursto.getAccessibleContext().setAccessibleName("txtcheckintoHours");
        reviewStar.getAccessibleContext().setAccessibleName("txtstarValue");
        reviewvote.getAccessibleContext().setAccessibleName("txtVotes");

        outputQuery.setColumns(20);
        outputQuery.setRows(5);
        jScrollPane4.setViewportView(outputQuery);
        outputQuery.getAccessibleContext().setAccessibleName("txtoutputQuery");

        jLabel5.setText("Output Query");
        jLabel5.setToolTipText("");

        jButton3.setText("Execute Query");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(jButton3)
                        .addGap(0, 91, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3))
        );

        jButton3.getAccessibleContext().setAccessibleName("bexecutequery");

        jLabel6.setText("Business Category ");

        jLabel7.setText("Sub Category");

        jLabel8.setText("Member Since");
        jLabel8.setName("lbl_member_since"); // NOI18N

        jLabel9.setText("Review Count");
        jLabel9.setName("lbl_review_count"); // NOI18N

        jLabel10.setText("Number of Friends");
        jLabel10.setName("lbl_number_of_friends"); // NOI18N

        jLabel11.setText("Average Stars");
        jLabel11.setName("lbl_average_stars"); // NOI18N

        jLabel12.setText("Select");
        jLabel12.setName("Select"); // NOI18N

        creviewcount.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ">", "<", "=" }));
        creviewcount.setName("c_reviewCount"); // NOI18N

        selectcondition.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "And", "OR" }));

        numberoffriends.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ">", "<", "=" }));
        numberoffriends.setName("c_numberOfFriends"); // NOI18N

        jLabel13.setText("Value");

        jLabel14.setText("Value");

        jLabel15.setText("Value");

        txtreviewcount.setName(""); // NOI18N

        averagestars.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ">", "<", "=" }));
        averagestars.setName("c_averageStars"); // NOI18N
        averagestars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                averagestarsActionPerformed(evt);
            }
        });

        membersince.setName("memberSince"); // NOI18N
        membersince.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                membersinceActionPerformed(evt);
            }
        });

        jLabel16.setText("Result");

        jComboBox10.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "User Search", "Business Search" }));
        jComboBox10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox10ActionPerformed(evt);
            }
        });

        jLabel23.setText("Select Search");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel12))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(selectcondition, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(17, 17, 17)
                                        .addComponent(membersince, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addComponent(jLabel23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(averagestars, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel15))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addComponent(numberoffriends, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel14))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(creviewcount, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel13))
                                    .addComponent(jComboBox10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtaveragestars, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                                    .addComponent(txtnumberoffriends)
                                    .addComponent(txtreviewcount))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(174, 174, 174))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(jLabel7))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 380, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(membersince, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel13)
                                    .addComponent(txtreviewcount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(creviewcount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(numberoffriends, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(txtnumberoffriends, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(selectcondition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(averagestars, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel15)
                                .addComponent(txtaveragestars, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23))
                        .addGap(234, 234, 234))))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        creviewcount.getAccessibleContext().setAccessibleName("cReviewCount");
        creviewcount.getAccessibleContext().setAccessibleDescription("");
        selectcondition.getAccessibleContext().setAccessibleName("cConditionSelector");
        numberoffriends.getAccessibleContext().setAccessibleName("cNumberOfFriends");
        txtreviewcount.getAccessibleContext().setAccessibleName("txtreviewcount");
        txtnumberoffriends.getAccessibleContext().setAccessibleName("txtnumberoffriends");
        txtaveragestars.getAccessibleContext().setAccessibleName("txtaveragestars");
        averagestars.getAccessibleContext().setAccessibleName("cAverageStars");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dayfromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayfromActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_dayfromActionPerformed

    private void numcheckinsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numcheckinsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numcheckinsActionPerformed

    private void daytoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_daytoActionPerformed
        // TODO add your handling code here:
       // outputQuery.setText("Gotta Catch them all");

    }//GEN-LAST:event_daytoActionPerformed

    private void reviewStarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reviewStarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reviewStarActionPerformed

    private void membersinceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_membersinceActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_membersinceActionPerformed

    private void jComboBox10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox10ActionPerformed

        // TODO add your handling code here:
        String Item = jComboBox10.getSelectedItem().toString();
        if (Item.equals("User Search")) {

            membersince.setEnabled(true);
            creviewcount.setEnabled(true);
            numberoffriends.setEnabled(true);
            averagestars.setEnabled(true);
            selectcondition.setEnabled(true);
            txtreviewcount.setEnabled(true);
            txtaveragestars.setEnabled(true);
            txtnumberoffriends.setEnabled(true);

            listbusinesssubcategories.setEnabled(false);
            listbusinesscategories.setEnabled(false);

        } else if (Item.equals("Business Search")) {
            membersince.setEnabled(false);
            creviewcount.setEnabled(false);
            numberoffriends.setEnabled(false);
            averagestars.setEnabled(false);
            selectcondition.setEnabled(false);
            txtreviewcount.setEnabled(false);
            txtaveragestars.setEnabled(false);
            txtnumberoffriends.setEnabled(false);

            listbusinesssubcategories.setEnabled(true);
            listbusinesscategories.setEnabled(true);

        }

    }//GEN-LAST:event_jComboBox10ActionPerformed

    private void averagestarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_averagestarsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_averagestarsActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        String Item1 = jComboBox10.getSelectedItem().toString();
        StringBuffer query = new StringBuffer();

        if (Item1.equals("User Search")) {
            java.sql.Date memsince = null;
            try {
                memsince = new java.sql.Date(membersince.getDate().getTime());

            } catch (Exception e) {

            }
            int reviewC = -1;
            int numfriends = -1;
            float avgstars = -1;
            int filterCondition = 0;

            if (!txtnumberoffriends.getText().isEmpty() || !txtreviewcount.getText().isEmpty() || memsince != null || !txtaveragestars.getText().isEmpty()) {

                query.append("select * from yelp_user where ");

            } else {
                query.append("select * from yelp_user");

            }

            if (!txtnumberoffriends.getText().isEmpty()) {

                numfriends = Integer.parseInt(txtnumberoffriends.getText());
                // query.append( "select * from yelp_user1 y,(select yelp_id from friends group by yelp_id having count(yelp_id) "+ numberoffriends.getSelectedItem().toString()+" "+ numfriends + ") f where y.user_id = f.yelp_id ");

                query.append("numfriends " + numberoffriends.getSelectedItem().toString() + " " + numfriends);

                filterCondition++;
            }

            if (memsince != null) {
                if (filterCondition > 0) {
                    query.append(" " + selectcondition.getSelectedItem().toString());

                }

                query.append(" YELPING_SINCE > to_date('" + memsince + "','YYYY-MM-DD')");
                filterCondition++;
            }

            if (!txtreviewcount.getText().isEmpty()) {

                if (filterCondition > 0) {
                    query.append(" " + selectcondition.getSelectedItem().toString());

                }

                reviewC = Integer.parseInt(txtreviewcount.getText());
                query.append(" REVIEW_COUNT " + creviewcount.getSelectedItem().toString() + " " + reviewC);
                filterCondition++;
            }

            if (!txtaveragestars.getText().isEmpty()) {
                if (filterCondition > 0) {
                    query.append(" " + selectcondition.getSelectedItem().toString());

                }
                avgstars = Float.parseFloat(txtaveragestars.getText());
                query.append(" AVERAGE_STARS " + averagestars.getSelectedItem().toString() + " " + avgstars);
                // numfriends = Integer.parseInt(txtnumberoffriends.getText());            
                filterCondition++;
            }

            try {
                outputQuery.setText(query.toString());
                Class.forName("oracle.jdbc.driver.OracleDriver");
                //Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "ADMIN","sa");
                Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "MAYUR", "123456");
                PreparedStatement ps = conn.prepareStatement(query.toString());
                ResultSet rs = ps.executeQuery();
                rs.setFetchSize(5);
                try {

                    DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                    dtm.setColumnCount(0);
                    dtm.setRowCount(0);
                    ResultSetMetaData meta = rs.getMetaData();
                    int numberOfColumns = meta.getColumnCount();

                    for (int i = 0; i < numberOfColumns; ++i) {
                        String name = meta.getColumnName(i + 1);

                        dtm.addColumn(name);

                    }

                    Object[] rowData;
                    while (rs.next()) {
                        rowData = new Object[numberOfColumns];
                        for (int i = 0; i < rowData.length; ++i) {
                            rowData[i] = rs.getObject(i + 1);
                            // System.out.print("\t"+ rs.getObject(i+1));

                        }

                        dtm.addRow(rowData);
                        rowData = null;
                        //System.out.println();
                    }

                    jTable1.setRowSelectionAllowed(true);
                    jTable1.setModel(dtm);
//            int row = jTable1.getSelectedRow();
//            String userid = jTable1.getValueAt(row, 7).toString();
//            System.out.println(userid);
////            jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
//                    @Override
//                    public void valueChanged(ListSelectionEvent lse) {
//                    
//                    JTable target = (JTable)lse.getSource();
//      int row = target.getSelectedRow();
//      String userid = target.getValueAt(row, 7).toString();
//      System.out.println(userid);
//                    System.out.println("here");
//                    
//                    
//                    lse.getFirstIndex();
//                    lse.getLastIndex();
//                    
//                    }
//                });
//           
//            jTable1.addMouseListener(new MouseAdapter() {
//               public void mouseClicked(MouseEvent e) {
//                  if (e.getClickCount() == 2) {
//                     JTable target = (JTable)e.getSource();
//                     int row = target.getSelectedRow();
//                     int column = target.getSelectedColumn();
//                     // do some action
//                     System.out.println("here1 ");
//                     }
//               }
//            });
                    jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                    dtm.fireTableDataChanged();
                    rs.close();
                    ps.close();
                    conn.close();
                } catch (Exception e) {
                    System.out.println("Error in table");
                }

            } catch (Exception e) {
                System.out.println("sql exception");
            }

        } // user search end
        else {

            java.sql.Date reviewfrom = null;
            java.sql.Date reviewto = null;

            try {
                reviewfrom = new java.sql.Date(datereviewfrom.getDate().getTime());
                reviewto = new java.sql.Date(datereviewto.getDate().getTime());

            } catch (Exception e) {

            }

            if (!reviewStar.getText().equals("")) {
                int reviewStars = Integer.parseInt(reviewStar.getText());
            }
            
            if (!reviewvote.getText().equals("")) {
                int reviewvotes = Integer.parseInt(reviewvote.getText());
            }
            

            // TODO add your handling code here:
            StringBuilder querybusiness = new StringBuilder();
            int reviewempty=0,checkinempty = 0;
            if((reviewfrom == null || reviewto == null) && reviewvote.getText().equals("") && reviewStar.getText().equals("")  )
            {
                  reviewempty =1 ;
            }
            if((hoursfrom.getText().equals("") || hoursto.getText().equals("")) && numcheckins.getText().equals(""))
            {
                  checkinempty =1 ;
            }

           if(listbusinesscategories.getSelectedValuesList().size()< 1 && reviewempty ==1 && checkinempty ==1)
           {
                querybusiness.append("select * from business");

           }
           else{
               
             querybusiness.append("select * from business where business_id in (select  r.business_id from checkin c, review r, categories ct where c.business_id = r.business_id and ct.business_id = r.business_id ");
             List<String> list1 ;
             if(listbusinesscategories.getSelectedValuesList().size()>0)
             {
                  list1 = listbusinesscategories.getSelectedValuesList();
                 querybusiness.append(" and category in(");

                 Iterator<String> iterator = list1.iterator();

                 while (iterator.hasNext()) {

                     querybusiness.append("'" + iterator.next() + "',");
                 }
                 querybusiness.deleteCharAt(querybusiness.length() - 1);
                 querybusiness.append(")");
                 System.out.println(querybusiness);
                 
             
             }
             
             if( listbusinesssubcategories.getSelectedValuesList().size()>0)
             {
             list1 = listbusinesssubcategories.getSelectedValuesList();
                 querybusiness.append(" and subcategory in(");

                 Iterator<String> iterator = list1.iterator();

                 while (iterator.hasNext()) {

                     querybusiness.append("'" + iterator.next() + "',");
                 }
                 querybusiness.deleteCharAt(querybusiness.length() - 1);
                 querybusiness.append(")");
                 System.out.println(querybusiness);
                 
             }
             
             if(checkinempty != 1)
             {
                 
                 
                    list1 = new ArrayList<String>();
                    list1.add("Sunday");
                    list1.add("Monday");
                    list1.add("Tuesday");
                    list1.add("Wednesday");
                    list1.add("Thursday");
                    list1.add("Friday");
                    list1.add("Saturday");
                   
                    
                    int from = list1.indexOf(dayfrom.getSelectedItem().toString()) ;
                    int to =  list1.indexOf(dayto.getSelectedItem().toString()) ;
                    int count = to-from;
                    if(count>=0)
                    {   
                        querybusiness.append(" and day in(");
                    
                        for(int i=from; i<=to; i++)
                        querybusiness.append( i + ",");
                        
                        querybusiness.deleteCharAt(querybusiness.length()-1);
                        querybusiness.append(")");
                        
                    }
                    
                    if(hoursfrom.getText().equals("") || hoursto.getText().equals("") ){
                    }
                    
                    else{
                    
                        int hoursfrom1 = Integer.parseInt(hoursfrom.getText());
                      int hoursto1 = Integer.parseInt(hoursto.getText());
                      int count1 = hoursto1-hoursfrom1;
                    if(count1>=0)
                    {
                        querybusiness.append(" and hours in(");
                    
                        for(int i=hoursfrom1; i<=hoursto1; i++)
                        querybusiness.append( i + ",");
                        
                        querybusiness.deleteCharAt(querybusiness.length()-1);
                        querybusiness.append(")");
                        
                    }
                    
                    
                    }
                    
                    
                 System.out.println(querybusiness);
                    
              }
             if(reviewempty !=1 )
             {
             
                if (reviewfrom!=null || reviewto != null) {
                     querybusiness.append(" and r.review_date between to_date('" + reviewfrom + "','YYYY-MM-DD') and to_date('" + reviewto + "','YYYY-MM-DD')");
                 }
                int flag=0;
                if(!numcheckins.getText().equals(""))
                    {
                        flag++;
                        querybusiness.append(" group by r.business_id having sum(numcheckin) " + listnumcheck.getSelectedItem().toString() + Integer.parseInt(numcheckins.getText()));
                    }
                    
                    
                 if (!reviewStar.getText().equals("")) {
                     if(flag >0)
                     {
                         querybusiness.append(" and avg(stars) " + reviewssstar.getSelectedItem().toString() + Integer.parseInt(reviewStar.getText()));
                 
                     }
                     else{     
                               flag++;
                               querybusiness.append(" group by r.business_id having avg(stars)" + reviewssstar.getSelectedItem().toString() + Integer.parseInt(reviewStar.getText()));
                         
                     }
                     
                     
                 }
                 if (!reviewvote.getText().equals("")) {

                     if(flag >0)
                     {
                         querybusiness.append(" and sum(votes_funny+votes_useful+votes_cool)  " + comboreviewvote.getSelectedItem().toString() + Integer.parseInt(reviewvote.getText()));
                 
                     }
                     else{
                               querybusiness.append(" group by r.business_id having sum(votes_funny +votes_useful+ votes_cool)  " + comboreviewvote.getSelectedItem().toString() + Integer.parseInt(reviewvote.getText()));
                         
                     }
                 
                 }
                 
             }
             
             querybusiness.append(")");
             System.out.println(querybusiness.toString());
           }
                try {
                outputQuery.setText(querybusiness.toString());
                Class.forName("oracle.jdbc.driver.OracleDriver");
                Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "MAYUR", "123456");
                PreparedStatement ps = conn.prepareStatement(querybusiness.toString());
                ResultSet rs = ps.executeQuery();
                
                try {

                    DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                   
                    dtm.setColumnCount(0);
                    dtm.setRowCount(0);
                    ResultSetMetaData meta = rs.getMetaData();
                    int numberOfColumns = meta.getColumnCount();

                    for (int i = 0; i < numberOfColumns; ++i) {
                        String name = meta.getColumnName(i + 1);

                        dtm.addColumn(name);

                    }

                    Object[] rowData;
                    while (rs.next()) {
                        rowData = new Object[numberOfColumns];
                        for (int i = 0; i < rowData.length; ++i) {
                            rowData[i] = rs.getObject(i + 1);
                            // System.out.print("\t"+ rs.getObject(i+1));

                        }

                        dtm.addRow(rowData);
                        rowData = null;
                        //System.out.println();
                    }

                    jTable1.setRowSelectionAllowed(true);
                    jTable1.setModel(dtm);

                    jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                    dtm.fireTableDataChanged();
                    rs.close();
                    ps.close();
                    conn.close();
                } catch (Exception e) {
                    System.out.println("Error in table");
                }

            } catch (Exception e) {
                System.out.println("sql exception");
            }
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
     
            int row = jTable1.getSelectedRow();
            String query;
            if(jComboBox10.getSelectedItem().toString().equals("User Search"))
            {
            String userid = jTable1.getValueAt(row, 6).toString();
             query = "select * from review where user_id in('" + userid + "')";
            }
            else {
            String business_id = jTable1.getValueAt(row, 0).toString();
            query = "select * from review where business_id in('" + business_id + "')";
            
            }
            Connection conn;
            PreparedStatement ps;

            try {
                conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "MAYUR", "123456");
                ps = conn.prepareStatement(query);

                ResultSet rs = ps.executeQuery();
                new MyDialog(this, rs);

                System.out.println("here");
                // ResultSet rs1 = ps.executeQuery();
                //rs1 = null;
                ps.close();
                conn.close();

            } catch (SQLException e) {

            }    
    
    }//GEN-LAST:event_jTable1MouseClicked

    private void listbusinesscategoriesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listbusinesscategoriesValueChanged

        List<String> list1 = this.listbusinesscategories.getSelectedValuesList();
        // TODO add your handling code here:
        ArrayList<String> list2 = new ArrayList<String>();

        String query = "select distinct subcategory from categoryclass where category in(";

        Iterator<String> iterator = list1.iterator();
        while (iterator.hasNext()) {
            query = query + "'" + iterator.next() + "',";
        }
        query = query.substring(0, query.length() - 1) + ")";
        System.out.println(query);
        Connection conn;
        PreparedStatement ps;

        try {
            conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "MAYUR", "123456");
            ps = conn.prepareStatement(query);

            ResultSet rs1 = ps.executeQuery();

            while (rs1.next()) {
                System.out.println(rs1.getString(1));
                String temp = rs1.getString(1);
                list2.add(temp);
                System.out.println(rs1.getString(1));

            }

            DefaultListModel model = new DefaultListModel();
            if (list2 != null) {
                for (String s : list2) {
                    model.addElement(s);
                    // model.addListDataListener(jComboBox1);
                }
                listbusinesssubcategories.setModel(model);

            }
            rs1 = null;
            ps.close();
            conn.close();

        } catch (SQLException e) {

        }
    }//GEN-LAST:event_listbusinesscategoriesValueChanged

    /**
     * @param args the command line arguments
     */
    class MyDialog extends JDialog {

        public MyDialog(JFrame frame, ResultSet rs) {
            super(frame, "Dialog", true);
//            Vector col = new Vector();
//            col.add("Name");
//            col.add("Roll No");
//            col.add("Grade");
//            Vector row = new Vector();
//            row.add("Bhupendra");
//            row.add("100");
//            row.add("A+");

//
 try{
            Vector<Vector> rowdata = new Vector<Vector>();
            
            Vector<Vector> columndata = new Vector<Vector>();

            ResultSetMetaData meta = rs.getMetaData();
            int numberOfColumns = meta.getColumnCount();

            for (int i = 0; i < numberOfColumns; ++i) {
                String name = meta.getColumnName(i + 1);
                Vector<String> col = new Vector<String>();
                col.add(name);
                columndata.addElement(col);

            }

            Object[] rowData;
            while (rs.next()) {
                rowData = new Object[numberOfColumns];
                Vector<String> str = new Vector<String>();
                for (int i = 0; i < rowData.length; ++i) {
                   rowData[i] = rs.getObject(i + 1);
                            // System.out.print("\t"+ rs.getObject(i+1));
                    str.add(rs.getObject(i + 1).toString());
                }
                rowdata.addElement(str);
            }

            
//
            JTable table = new JTable(rowdata, columndata);
            
            JScrollPane p1 = new JScrollPane(table);
            this.add(p1,BorderLayout.CENTER);
            this.setSize(300, 150);
            this.setVisible(true);
//this.setSize(200,100);
            this.pack();
            this.show();
 }catch(Exception e ){System.out.println("Exception while loading new table");}       ;
 }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HW3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HW3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HW3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HW3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HW3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> averagestars;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> comboreviewvote;
    private javax.swing.JComboBox<String> creviewcount;
    private org.jdesktop.swingx.JXDatePicker datereviewfrom;
    private org.jdesktop.swingx.JXDatePicker datereviewto;
    private javax.swing.JComboBox<String> dayfrom;
    private javax.swing.JComboBox<String> dayto;
    private javax.swing.JTextField hoursfrom;
    private javax.swing.JTextField hoursto;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox10;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JList<String> listbusinesscategories;
    private javax.swing.JList<String> listbusinesssubcategories;
    private javax.swing.JComboBox<String> listnumcheck;
    private org.jdesktop.swingx.JXDatePicker membersince;
    private javax.swing.JComboBox<String> numberoffriends;
    private javax.swing.JTextField numcheckins;
    private javax.swing.JTextArea outputQuery;
    private javax.swing.JTextField reviewStar;
    private javax.swing.JComboBox<String> reviewssstar;
    private javax.swing.JTextField reviewvote;
    private javax.swing.JComboBox<String> selectcondition;
    private javax.swing.JTextField txtaveragestars;
    private javax.swing.JTextField txtnumberoffriends;
    private javax.swing.JTextField txtreviewcount;
    // End of variables declaration//GEN-END:variables
}
